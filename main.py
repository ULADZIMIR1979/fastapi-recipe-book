"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ endpoint'—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API
"""

from fastapi import FastAPI, Depends, HTTPException, status
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List
from contextlib import asynccontextmanager

from database import get_db, init_db
from schemas import (
    RecipeCreate,
    RecipeListResponse,
    RecipeDetailResponse,
    IngredientResponse
)
from crud import recipe_crud

print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")

@asynccontextmanager
async def lifespan(app: FastAPI):
    """
    –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    –ó–∞–º–µ–Ω—è–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–π @app.on_event("startup")
    """
    print("üé¨ –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    await init_db()
    print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!")
    yield
    print("üî¥ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É...")

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –∏ lifespan
app = FastAPI(
    title="Recipe Book API",
    description="API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—É–ª–∏–Ω–∞—Ä–Ω–æ–π –∫–Ω–∏–≥–æ–π —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏",
    version="1.0.0",
    docs_url="/docs",  # URL –¥–ª—è Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    redoc_url="/redoc",  # URL –¥–ª—è ReDoc –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    lifespan=lifespan
)

print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!")


@app.get("/")
async def root():
    """
    –ö–æ—Ä–Ω–µ–≤–æ–π endpoint —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ API

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        dict: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ API
    """
    print("üåê –ö—Ç–æ-—Ç–æ –∑–∞—à–µ–ª –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–π endpoint!")
    return {
        "message": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ API –ö—É–ª–∏–Ω–∞—Ä–Ω–æ–π –∫–Ω–∏–≥–∏!",
        "version": "1.0.0",
        "docs": "/docs",
        "redoc": "/redoc"
    }


@app.get(
    "/recipes",
    response_model=List[RecipeListResponse],
    summary="–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã",
    description="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∏ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤–∫–∏"
)
async def get_recipes(
    skip: int = 0,
    limit: int = 100,
    db: AsyncSession = Depends(get_db)
):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ

    - **skip**: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ (–¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏)
    - **limit**: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–∞–ø–∏—Å–µ–π (–¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏)

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ:
    1. –ü—Ä–æ—Å–º–æ—Ç—Ä—ã (—É–±—ã–≤–∞–Ω–∏–µ) - —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–µ—Ä–≤—ã–µ
    2. –í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ (–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ) - —Å–∞–º—ã–µ –±—ã—Å—Ç—Ä—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –ø–µ—Ä–≤—ã–µ –ø—Ä–∏ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    """
    print(f"üìã –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤ (skip: {skip}, limit: {limit})")

    recipes = await recipe_crud.get_recipes(db, skip=skip, limit=limit)
    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º {len(recipes)} —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç—É")
    return recipes


@app.get(
    "/recipes/{recipe_id}",
    response_model=RecipeDetailResponse,
    summary="–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Ä–µ—Ü–µ–ø—Ç–∞",
    description="–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ –∏ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"
)
async def get_recipe(
    recipe_id: int,
    db: AsyncSession = Depends(get_db)
):
    """
    –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ä–µ—Ü–µ–ø—Ç–µ

    - **recipe_id**: ID —Ä–µ—Ü–µ–ø—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è

    –≠—Ç–æ—Ç endpoint —Ç–∞–∫–∂–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —Ä–µ—Ü–µ–ø—Ç–∞ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏,
    —á—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –≤ —Å–ø–∏—Å–∫–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404 –µ—Å–ª–∏ —Ä–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.
    """
    print(f"üîç –ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π —Ä–µ—Ü–µ–ø—Ç–∞ —Å ID: {recipe_id}")

    recipe = await recipe_crud.get_recipe(db, recipe_id)
    if recipe is None:
        print(f"‚ùå –†–µ—Ü–µ–ø—Ç —Å ID {recipe_id} –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 404")
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND,
            detail="–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
        )

    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ —Ä–µ—Ü–µ–ø—Ç–∞: '{recipe.title}'")
    return recipe


@app.post(
    "/recipes",
    response_model=RecipeDetailResponse,
    status_code=status.HTTP_201_CREATED,
    summary="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç",
    description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏"
)
async def create_recipe(
    recipe: RecipeCreate,
    db: AsyncSession = Depends(get_db)
):
    """
    –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç

    - **title**: –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ (–º–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤)
    - **cooking_time**: –í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö (–º–∏–Ω–∏–º—É–º 1)
    - **description**: –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
    - **ingredient_names**: –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤

    –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç —Å–æ –≤—Å–µ–º–∏ –¥–µ—Ç–∞–ª—è–º–∏.
    """
    print(f"üÜï –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞: '{recipe.title}'")

    try:
        created_recipe = await recipe_crud.create_recipe(db, recipe)
        print(f"‚úÖ –†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å ID: {created_recipe.id}")
        return created_recipe
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞: {str(e)}")
        raise HTTPException(
            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
            detail=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞: {str(e)}"
        )


@app.get(
    "/ingredients",
    response_model=List[IngredientResponse],
    summary="–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã",
    description="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤"
)
async def get_ingredients(db: AsyncSession = Depends(get_db)):
    """
    –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ.
    """
    print("üì¶ –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")

    ingredients = await recipe_crud.get_ingredients(db)
    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º {len(ingredients)} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç—É")
    return ingredients


print("‚úÖ –í—Å–µ endpoint'—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")

if __name__ == "__main__":
    print("üéØ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–º–æ—â—å—é uvicorn...")
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)